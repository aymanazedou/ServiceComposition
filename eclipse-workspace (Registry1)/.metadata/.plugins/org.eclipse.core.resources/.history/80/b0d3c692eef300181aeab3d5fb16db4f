package ann;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;

public class MonAnnuaire {

	public static void main(String[] args) throws SQLException {
		ServerSocket socketAnnuaire;
		Socket Socketdeannuaire;
		final BufferedReader in;
		final PrintWriter out;		
		
		try {
			// create server socket with a port number 5000
			socketAnnuaire = new ServerSocket(5000);
			//wait for a connection and affect it to this socket
			Socketdeannuaire = socketAnnuaire.accept();
			//flow to send
			out = new PrintWriter(Socketdeannuaire.getOutputStream());
			//flow to receive
			in = new BufferedReader(new InputStreamReader(Socketdeannuaire.getInputStream()));
			
			
			//create two threads, because receiving and sending are made at the same time
			//receive message from the Combination Engine ==============================================
			Thread receive = new Thread(new Runnable() {
				String msg;
				@Override
				public void run() {
					while(true) {
						try {
							msg = in.readLine();
							
							//get the information needed from the msg
							String[] splitMsg = msg.split("\\s+");
							System.out.println("Command : " + splitMsg[0] + "\n");
							for (int i = 1; i < splitMsg.length; i++) {
								System.out.println("Parameter "+ i + " : " + splitMsg[i]);
							}
							
							//verify the command if it's (exist)
							if (splitMsg[0].equals("exist")==true){
								
//send reply=======================!!!!send also the file WSDL!!!!=====================================
								double random = Math.random();
								String msg;
								//if random is greater than 20 percent so the service exists
									if (random>0.2) {
										//Retrieve from the database
//=======connect to database==============================================================================
										
										System.out.println("------------Mysql JDBC Connection-------------");
									  try {
										  Class.forName("com.mysql.jdbc.Driver");
									  	}
									  catch (ClassNotFoundException e) {
										System.out.println("Driver not found!!");
										e.printStackTrace();
										return;
									  }
									  
									  System.out.println("JDBC Driver OK!");
									  System.out.println("0");
									  try {
										  String location = null;
										  System.out.println("1");
										  Connection connection = null;
										  ResultSet resultSet = null;
										  java.sql.Statement statement = null;
										  System.out.println("2");
										  connection = DriverManager.getConnection("jdbc:mysql://localhost/services?"+ "user=ay&password=aymanazedou");
										  System.out.println("3");
										  statement = connection.createStatement();
										  System.out.println("4");
										  resultSet = statement.executeQuery("select * from services.Ser");
										  System.out.println("5");
										  System.out.println("6");
										  while (resultSet.next()) {
												  location = resultSet.getString("linkWSDL");
										  }
										  connection.close();
										  System.out.println("7");
										  msg = "===The service exist== and here is the link : ";
										  out.println(msg + location);
										  out.flush();
									  } catch (SQLException e) {
										System.out.println("Connection failed!!");
									}
								//=====================================================================================================
									}
									else {
										msg = "xxxThe service doesn't existxxx";
										out.println(msg);
										out.flush();
									}
								
								
								
								
								
								
								
								
				
								//=================================================================
								
							}
							
							
						} catch (IOException e) {
							e.printStackTrace();
						}
						
					}
					
				}
			});
			
			receive.start();
		
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
		
	}

}
